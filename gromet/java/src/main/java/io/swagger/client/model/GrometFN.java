/*
 * Grounded Model Exchange (GroMEt) schema for Function Networks
 * This document defines the GroMEt Function Network data model. Note that Metadata is defined in separate spec.  __Using Swagger to Generate Class Structure__  To automatically generate Python or Java models corresponding to this document, you can use [swagger-codegen](https://swagger.io/tools/swagger-codegen/). This can be used to generate the client code based off of this spec, and in the process this will generate the data model class structure.  1. Install via the method described for your operating system    [here](https://github.com/swagger-api/swagger-codegen#Prerequisites).    Make sure to install a version after 3.0 that will support openapi 3. 2. Run swagger-codegen with the options in the example below.    The URL references where the yaml for this documentation is stored on    github. Make sure to replace CURRENT_VERSION with the correct version.    (The current version is `0.1.4`.)    To generate Java classes rather, change the `-l python` to `-l java`.    Change the value to the `-o` option to the desired output location.    ```    swagger-codegen generate -l python -o ./client -i https://raw.githubusercontent.com/ml4ai/automates-v2/master/docs/source/gromet_FN_v{CURRENT_VERSION}.yaml    ``` 3. Once it executes, the client code will be generated at your specified    location.    For python, the classes will be located in    `$OUTPUT_PATH/swagger_client/models/`.    For java, they will be located in    `$OUTPUT_PATH/src/main/java/io/swagger/client/model/`  If generating GroMEt schema data model classes in SKEMA (AutoMATES), then afer generating the above, follow the instructions here: ``` <automates>/automates/model_assembly/gromet/model/README.md ``` 
 *
 * OpenAPI spec version: 0.1.4
 * Contact: claytonm@arizona.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.GrometBoxConditional;
import io.swagger.client.model.GrometBoxFunction;
import io.swagger.client.model.GrometBoxLoop;
import io.swagger.client.model.GrometObject;
import io.swagger.client.model.GrometPort;
import io.swagger.client.model.GrometWire;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * A Function Network (FN). 
 */
@Schema(description = "A Function Network (FN). ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-02T01:18:52.196-07:00[America/Phoenix]")
public class GrometFN extends GrometObject {
  @SerializedName("name")
  private String name = null;

  @SerializedName("b")
  private List<GrometBoxFunction> b = null;

  @SerializedName("opi")
  private List<GrometPort> opi = null;

  @SerializedName("opo")
  private List<GrometPort> opo = null;

  @SerializedName("wopio")
  private List<GrometWire> wopio = null;

  @SerializedName("bf")
  private List<GrometBoxFunction> bf = null;

  @SerializedName("pif")
  private List<GrometPort> pif = null;

  @SerializedName("pof")
  private List<GrometPort> pof = null;

  @SerializedName("wfopi")
  private List<GrometWire> wfopi = null;

  @SerializedName("wfl")
  private List<GrometWire> wfl = null;

  @SerializedName("wff")
  private List<GrometWire> wff = null;

  @SerializedName("wfc")
  private List<GrometWire> wfc = null;

  @SerializedName("wfopo")
  private List<GrometWire> wfopo = null;

  @SerializedName("bl")
  private List<GrometBoxLoop> bl = null;

  @SerializedName("pil")
  private List<GrometPort> pil = null;

  @SerializedName("pol")
  private List<GrometPort> pol = null;

  @SerializedName("wlopi")
  private List<GrometWire> wlopi = null;

  @SerializedName("wll")
  private List<GrometWire> wll = null;

  @SerializedName("wlf")
  private List<GrometWire> wlf = null;

  @SerializedName("wlc")
  private List<GrometWire> wlc = null;

  @SerializedName("wlopo")
  private List<GrometWire> wlopo = null;

  @SerializedName("wl_iiargs")
  private List<GrometWire> wlIiargs = null;

  @SerializedName("wl_ioargs")
  private List<GrometWire> wlIoargs = null;

  @SerializedName("wl_cargs")
  private List<GrometWire> wlCargs = null;

  @SerializedName("bc")
  private List<GrometBoxConditional> bc = null;

  @SerializedName("pic")
  private List<GrometPort> pic = null;

  @SerializedName("poc")
  private List<GrometPort> poc = null;

  @SerializedName("wcopi")
  private List<GrometWire> wcopi = null;

  @SerializedName("wcl")
  private List<GrometWire> wcl = null;

  @SerializedName("wcf")
  private List<GrometWire> wcf = null;

  @SerializedName("wcc")
  private List<GrometWire> wcc = null;

  @SerializedName("wcopo")
  private List<GrometWire> wcopo = null;

  @SerializedName("wc_cargs")
  private List<GrometWire> wcCargs = null;

  public GrometFN name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the Function Network 
   * @return name
  **/
  @Schema(description = "The name of the Function Network ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GrometFN b(List<GrometBoxFunction> b) {
    this.b = b;
    return this;
  }

  public GrometFN addBItem(GrometBoxFunction bItem) {
    if (this.b == null) {
      this.b = new ArrayList<GrometBoxFunction>();
    }
    this.b.add(bItem);
    return this;
  }

   /**
   * b: The FN Outer Box (although not enforced, there is always only 1). 
   * @return b
  **/
  @Schema(description = "b: The FN Outer Box (although not enforced, there is always only 1). ")
  public List<GrometBoxFunction> getB() {
    return b;
  }

  public void setB(List<GrometBoxFunction> b) {
    this.b = b;
  }

  public GrometFN opi(List<GrometPort> opi) {
    this.opi = opi;
    return this;
  }

  public GrometFN addOpiItem(GrometPort opiItem) {
    if (this.opi == null) {
      this.opi = new ArrayList<GrometPort>();
    }
    this.opi.add(opiItem);
    return this;
  }

   /**
   * opi: The Outer Port Inputs of the FN Outer Box (b) 
   * @return opi
  **/
  @Schema(description = "opi: The Outer Port Inputs of the FN Outer Box (b) ")
  public List<GrometPort> getOpi() {
    return opi;
  }

  public void setOpi(List<GrometPort> opi) {
    this.opi = opi;
  }

  public GrometFN opo(List<GrometPort> opo) {
    this.opo = opo;
    return this;
  }

  public GrometFN addOpoItem(GrometPort opoItem) {
    if (this.opo == null) {
      this.opo = new ArrayList<GrometPort>();
    }
    this.opo.add(opoItem);
    return this;
  }

   /**
   * opo: The Outer Port Outputs of the FN Outer Box (b) 
   * @return opo
  **/
  @Schema(description = "opo: The Outer Port Outputs of the FN Outer Box (b) ")
  public List<GrometPort> getOpo() {
    return opo;
  }

  public void setOpo(List<GrometPort> opo) {
    this.opo = opo;
  }

  public GrometFN wopio(List<GrometWire> wopio) {
    this.wopio = wopio;
    return this;
  }

  public GrometFN addWopioItem(GrometWire wopioItem) {
    if (this.wopio == null) {
      this.wopio = new ArrayList<GrometWire>();
    }
    this.wopio.add(wopioItem);
    return this;
  }

   /**
   * wopio: The Wires from (src) Outer Box Outer Port Inputs (opi) to (tgt) Outer Box Outer Port Outputs (opo). (AKA: Passthrough.) 
   * @return wopio
  **/
  @Schema(description = "wopio: The Wires from (src) Outer Box Outer Port Inputs (opi) to (tgt) Outer Box Outer Port Outputs (opo). (AKA: Passthrough.) ")
  public List<GrometWire> getWopio() {
    return wopio;
  }

  public void setWopio(List<GrometWire> wopio) {
    this.wopio = wopio;
  }

  public GrometFN bf(List<GrometBoxFunction> bf) {
    this.bf = bf;
    return this;
  }

  public GrometFN addBfItem(GrometBoxFunction bfItem) {
    if (this.bf == null) {
      this.bf = new ArrayList<GrometBoxFunction>();
    }
    this.bf.add(bfItem);
    return this;
  }

   /**
   * bf: The GrometBoxFunctions within this GrometFN. 
   * @return bf
  **/
  @Schema(description = "bf: The GrometBoxFunctions within this GrometFN. ")
  public List<GrometBoxFunction> getBf() {
    return bf;
  }

  public void setBf(List<GrometBoxFunction> bf) {
    this.bf = bf;
  }

  public GrometFN pif(List<GrometPort> pif) {
    this.pif = pif;
    return this;
  }

  public GrometFN addPifItem(GrometPort pifItem) {
    if (this.pif == null) {
      this.pif = new ArrayList<GrometPort>();
    }
    this.pif.add(pifItem);
    return this;
  }

   /**
   * pif: The Port Inputs of the GrometBoxFunctions (bf). 
   * @return pif
  **/
  @Schema(description = "pif: The Port Inputs of the GrometBoxFunctions (bf). ")
  public List<GrometPort> getPif() {
    return pif;
  }

  public void setPif(List<GrometPort> pif) {
    this.pif = pif;
  }

  public GrometFN pof(List<GrometPort> pof) {
    this.pof = pof;
    return this;
  }

  public GrometFN addPofItem(GrometPort pofItem) {
    if (this.pof == null) {
      this.pof = new ArrayList<GrometPort>();
    }
    this.pof.add(pofItem);
    return this;
  }

   /**
   * pof: The Port Outputs of the GrometBoxFunctions (bf). 
   * @return pof
  **/
  @Schema(description = "pof: The Port Outputs of the GrometBoxFunctions (bf). ")
  public List<GrometPort> getPof() {
    return pof;
  }

  public void setPof(List<GrometPort> pof) {
    this.pof = pof;
  }

  public GrometFN wfopi(List<GrometWire> wfopi) {
    this.wfopi = wfopi;
    return this;
  }

  public GrometFN addWfopiItem(GrometWire wfopiItem) {
    if (this.wfopi == null) {
      this.wfopi = new ArrayList<GrometWire>();
    }
    this.wfopi.add(wfopiItem);
    return this;
  }

   /**
   * wfopi: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) Outer Box Outer Port Inputs (opi). 
   * @return wfopi
  **/
  @Schema(description = "wfopi: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) Outer Box Outer Port Inputs (opi). ")
  public List<GrometWire> getWfopi() {
    return wfopi;
  }

  public void setWfopi(List<GrometWire> wfopi) {
    this.wfopi = wfopi;
  }

  public GrometFN wfl(List<GrometWire> wfl) {
    this.wfl = wfl;
    return this;
  }

  public GrometFN addWflItem(GrometWire wflItem) {
    if (this.wfl == null) {
      this.wfl = new ArrayList<GrometWire>();
    }
    this.wfl.add(wflItem);
    return this;
  }

   /**
   * wfl: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) GrometBoxFunctions Port Outputs (pof). 
   * @return wfl
  **/
  @Schema(description = "wfl: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) GrometBoxFunctions Port Outputs (pof). ")
  public List<GrometWire> getWfl() {
    return wfl;
  }

  public void setWfl(List<GrometWire> wfl) {
    this.wfl = wfl;
  }

  public GrometFN wff(List<GrometWire> wff) {
    this.wff = wff;
    return this;
  }

  public GrometFN addWffItem(GrometWire wffItem) {
    if (this.wff == null) {
      this.wff = new ArrayList<GrometWire>();
    }
    this.wff.add(wffItem);
    return this;
  }

   /**
   * wff: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) GrometBoxFunctions Port Outputs (pof). 
   * @return wff
  **/
  @Schema(description = "wff: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) GrometBoxFunctions Port Outputs (pof). ")
  public List<GrometWire> getWff() {
    return wff;
  }

  public void setWff(List<GrometWire> wff) {
    this.wff = wff;
  }

  public GrometFN wfc(List<GrometWire> wfc) {
    this.wfc = wfc;
    return this;
  }

  public GrometFN addWfcItem(GrometWire wfcItem) {
    if (this.wfc == null) {
      this.wfc = new ArrayList<GrometWire>();
    }
    this.wfc.add(wfcItem);
    return this;
  }

   /**
   * wfc: The Wires from (src) GrometBoxConditionals Port Inputs (pic) to (tgt) GrometBoxFunctions Port Outputs (pof). 
   * @return wfc
  **/
  @Schema(description = "wfc: The Wires from (src) GrometBoxConditionals Port Inputs (pic) to (tgt) GrometBoxFunctions Port Outputs (pof). ")
  public List<GrometWire> getWfc() {
    return wfc;
  }

  public void setWfc(List<GrometWire> wfc) {
    this.wfc = wfc;
  }

  public GrometFN wfopo(List<GrometWire> wfopo) {
    this.wfopo = wfopo;
    return this;
  }

  public GrometFN addWfopoItem(GrometWire wfopoItem) {
    if (this.wfopo == null) {
      this.wfopo = new ArrayList<GrometWire>();
    }
    this.wfopo.add(wfopoItem);
    return this;
  }

   /**
   * wfopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxFunctions Port Outputs (pof). 
   * @return wfopo
  **/
  @Schema(description = "wfopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxFunctions Port Outputs (pof). ")
  public List<GrometWire> getWfopo() {
    return wfopo;
  }

  public void setWfopo(List<GrometWire> wfopo) {
    this.wfopo = wfopo;
  }

  public GrometFN bl(List<GrometBoxLoop> bl) {
    this.bl = bl;
    return this;
  }

  public GrometFN addBlItem(GrometBoxLoop blItem) {
    if (this.bl == null) {
      this.bl = new ArrayList<GrometBoxLoop>();
    }
    this.bl.add(blItem);
    return this;
  }

   /**
   * bl: The FN GrometBoxLoops within this GrometFN. 
   * @return bl
  **/
  @Schema(description = "bl: The FN GrometBoxLoops within this GrometFN. ")
  public List<GrometBoxLoop> getBl() {
    return bl;
  }

  public void setBl(List<GrometBoxLoop> bl) {
    this.bl = bl;
  }

  public GrometFN pil(List<GrometPort> pil) {
    this.pil = pil;
    return this;
  }

  public GrometFN addPilItem(GrometPort pilItem) {
    if (this.pil == null) {
      this.pil = new ArrayList<GrometPort>();
    }
    this.pil.add(pilItem);
    return this;
  }

   /**
   * pil: The Port Inputs of the GrometBoxLoops (bl) 
   * @return pil
  **/
  @Schema(description = "pil: The Port Inputs of the GrometBoxLoops (bl) ")
  public List<GrometPort> getPil() {
    return pil;
  }

  public void setPil(List<GrometPort> pil) {
    this.pil = pil;
  }

  public GrometFN pol(List<GrometPort> pol) {
    this.pol = pol;
    return this;
  }

  public GrometFN addPolItem(GrometPort polItem) {
    if (this.pol == null) {
      this.pol = new ArrayList<GrometPort>();
    }
    this.pol.add(polItem);
    return this;
  }

   /**
   * pol: The Port Outputs of the GrometBoxLoops (bl) 
   * @return pol
  **/
  @Schema(description = "pol: The Port Outputs of the GrometBoxLoops (bl) ")
  public List<GrometPort> getPol() {
    return pol;
  }

  public void setPol(List<GrometPort> pol) {
    this.pol = pol;
  }

  public GrometFN wlopi(List<GrometWire> wlopi) {
    this.wlopi = wlopi;
    return this;
  }

  public GrometFN addWlopiItem(GrometWire wlopiItem) {
    if (this.wlopi == null) {
      this.wlopi = new ArrayList<GrometWire>();
    }
    this.wlopi.add(wlopiItem);
    return this;
  }

   /**
   * wlopi: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) the Outer Box Outer Port Inputs (opi). 
   * @return wlopi
  **/
  @Schema(description = "wlopi: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) the Outer Box Outer Port Inputs (opi). ")
  public List<GrometWire> getWlopi() {
    return wlopi;
  }

  public void setWlopi(List<GrometWire> wlopi) {
    this.wlopi = wlopi;
  }

  public GrometFN wll(List<GrometWire> wll) {
    this.wll = wll;
    return this;
  }

  public GrometFN addWllItem(GrometWire wllItem) {
    if (this.wll == null) {
      this.wll = new ArrayList<GrometWire>();
    }
    this.wll.add(wllItem);
    return this;
  }

   /**
   * wll: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxLoops Port Outputs (pol). 
   * @return wll
  **/
  @Schema(description = "wll: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxLoops Port Outputs (pol). ")
  public List<GrometWire> getWll() {
    return wll;
  }

  public void setWll(List<GrometWire> wll) {
    this.wll = wll;
  }

  public GrometFN wlf(List<GrometWire> wlf) {
    this.wlf = wlf;
    return this;
  }

  public GrometFN addWlfItem(GrometWire wlfItem) {
    if (this.wlf == null) {
      this.wlf = new ArrayList<GrometWire>();
    }
    this.wlf.add(wlfItem);
    return this;
  }

   /**
   * wlf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxLoops Port Outputs (pol). 
   * @return wlf
  **/
  @Schema(description = "wlf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxLoops Port Outputs (pol). ")
  public List<GrometWire> getWlf() {
    return wlf;
  }

  public void setWlf(List<GrometWire> wlf) {
    this.wlf = wlf;
  }

  public GrometFN wlc(List<GrometWire> wlc) {
    this.wlc = wlc;
    return this;
  }

  public GrometFN addWlcItem(GrometWire wlcItem) {
    if (this.wlc == null) {
      this.wlc = new ArrayList<GrometWire>();
    }
    this.wlc.add(wlcItem);
    return this;
  }

   /**
   * wlc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxLoops Port Outputs (pol). 
   * @return wlc
  **/
  @Schema(description = "wlc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxLoops Port Outputs (pol). ")
  public List<GrometWire> getWlc() {
    return wlc;
  }

  public void setWlc(List<GrometWire> wlc) {
    this.wlc = wlc;
  }

  public GrometFN wlopo(List<GrometWire> wlopo) {
    this.wlopo = wlopo;
    return this;
  }

  public GrometFN addWlopoItem(GrometWire wlopoItem) {
    if (this.wlopo == null) {
      this.wlopo = new ArrayList<GrometWire>();
    }
    this.wlopo.add(wlopoItem);
    return this;
  }

   /**
   * wlopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxLoops Port Outputs (pol). 
   * @return wlopo
  **/
  @Schema(description = "wlopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxLoops Port Outputs (pol). ")
  public List<GrometWire> getWlopo() {
    return wlopo;
  }

  public void setWlopo(List<GrometWire> wlopo) {
    this.wlopo = wlopo;
  }

  public GrometFN wlIiargs(List<GrometWire> wlIiargs) {
    this.wlIiargs = wlIiargs;
    return this;
  }

  public GrometFN addWlIiargsItem(GrometWire wlIiargsItem) {
    if (this.wlIiargs == null) {
      this.wlIiargs = new ArrayList<GrometWire>();
    }
    this.wlIiargs.add(wlIiargsItem);
    return this;
  }

   /**
   * wl_iiargs: The Wires from (src) the arguments (the Port Inputs) of the Loop init (itself a Function, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop init Function gets its input argument values before the init Function is evaluated; these values originate from outside of the Loop. 
   * @return wlIiargs
  **/
  @Schema(description = "wl_iiargs: The Wires from (src) the arguments (the Port Inputs) of the Loop init (itself a Function, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop init Function gets its input argument values before the init Function is evaluated; these values originate from outside of the Loop. ")
  public List<GrometWire> getWlIiargs() {
    return wlIiargs;
  }

  public void setWlIiargs(List<GrometWire> wlIiargs) {
    this.wlIiargs = wlIiargs;
  }

  public GrometFN wlIoargs(List<GrometWire> wlIoargs) {
    this.wlIoargs = wlIoargs;
    return this;
  }

  public GrometFN addWlIoargsItem(GrometWire wlIoargsItem) {
    if (this.wlIoargs == null) {
      this.wlIoargs = new ArrayList<GrometWire>();
    }
    this.wlIoargs.add(wlIoargsItem);
    return this;
  }

   /**
   * wl_ioargs: The Wires from (src) the Port Inputs of the Loop (pil) to (tgt) the Port Outputs of the Loop init (itself a Function, a type of GrometBoxFunction) (pof). It is through these Wires that the Loop Port Inputs get their values initialized after evaluation of the init Function. 
   * @return wlIoargs
  **/
  @Schema(description = "wl_ioargs: The Wires from (src) the Port Inputs of the Loop (pil) to (tgt) the Port Outputs of the Loop init (itself a Function, a type of GrometBoxFunction) (pof). It is through these Wires that the Loop Port Inputs get their values initialized after evaluation of the init Function. ")
  public List<GrometWire> getWlIoargs() {
    return wlIoargs;
  }

  public void setWlIoargs(List<GrometWire> wlIoargs) {
    this.wlIoargs = wlIoargs;
  }

  public GrometFN wlCargs(List<GrometWire> wlCargs) {
    this.wlCargs = wlCargs;
    return this;
  }

  public GrometFN addWlCargsItem(GrometWire wlCargsItem) {
    if (this.wlCargs == null) {
      this.wlCargs = new ArrayList<GrometWire>();
    }
    this.wlCargs.add(wlCargsItem);
    return this;
  }

   /**
   * wl_cargs: The Wires from (src) the arguments (the Port Inputs) of the Loop condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop condition Predicate gets its input argument values from the current state of the Loop Input Ports. 
   * @return wlCargs
  **/
  @Schema(description = "wl_cargs: The Wires from (src) the arguments (the Port Inputs) of the Loop condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop condition Predicate gets its input argument values from the current state of the Loop Input Ports. ")
  public List<GrometWire> getWlCargs() {
    return wlCargs;
  }

  public void setWlCargs(List<GrometWire> wlCargs) {
    this.wlCargs = wlCargs;
  }

  public GrometFN bc(List<GrometBoxConditional> bc) {
    this.bc = bc;
    return this;
  }

  public GrometFN addBcItem(GrometBoxConditional bcItem) {
    if (this.bc == null) {
      this.bc = new ArrayList<GrometBoxConditional>();
    }
    this.bc.add(bcItem);
    return this;
  }

   /**
   * bc: The FN GrometBoxConditionals within this GrometFN. 
   * @return bc
  **/
  @Schema(description = "bc: The FN GrometBoxConditionals within this GrometFN. ")
  public List<GrometBoxConditional> getBc() {
    return bc;
  }

  public void setBc(List<GrometBoxConditional> bc) {
    this.bc = bc;
  }

  public GrometFN pic(List<GrometPort> pic) {
    this.pic = pic;
    return this;
  }

  public GrometFN addPicItem(GrometPort picItem) {
    if (this.pic == null) {
      this.pic = new ArrayList<GrometPort>();
    }
    this.pic.add(picItem);
    return this;
  }

   /**
   * pic: The Port Inputs of the GrometBoxConditionals (bc) 
   * @return pic
  **/
  @Schema(description = "pic: The Port Inputs of the GrometBoxConditionals (bc) ")
  public List<GrometPort> getPic() {
    return pic;
  }

  public void setPic(List<GrometPort> pic) {
    this.pic = pic;
  }

  public GrometFN poc(List<GrometPort> poc) {
    this.poc = poc;
    return this;
  }

  public GrometFN addPocItem(GrometPort pocItem) {
    if (this.poc == null) {
      this.poc = new ArrayList<GrometPort>();
    }
    this.poc.add(pocItem);
    return this;
  }

   /**
   * poc: The Port Outputs of the GrometBoxConditionals (bc) 
   * @return poc
  **/
  @Schema(description = "poc: The Port Outputs of the GrometBoxConditionals (bc) ")
  public List<GrometPort> getPoc() {
    return poc;
  }

  public void setPoc(List<GrometPort> poc) {
    this.poc = poc;
  }

  public GrometFN wcopi(List<GrometWire> wcopi) {
    this.wcopi = wcopi;
    return this;
  }

  public GrometFN addWcopiItem(GrometWire wcopiItem) {
    if (this.wcopi == null) {
      this.wcopi = new ArrayList<GrometWire>();
    }
    this.wcopi.add(wcopiItem);
    return this;
  }

   /**
   * wcopi: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the Outer Box Outer Port Inputs (opi). 
   * @return wcopi
  **/
  @Schema(description = "wcopi: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the Outer Box Outer Port Inputs (opi). ")
  public List<GrometWire> getWcopi() {
    return wcopi;
  }

  public void setWcopi(List<GrometWire> wcopi) {
    this.wcopi = wcopi;
  }

  public GrometFN wcl(List<GrometWire> wcl) {
    this.wcl = wcl;
    return this;
  }

  public GrometFN addWclItem(GrometWire wclItem) {
    if (this.wcl == null) {
      this.wcl = new ArrayList<GrometWire>();
    }
    this.wcl.add(wclItem);
    return this;
  }

   /**
   * wcl: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
   * @return wcl
  **/
  @Schema(description = "wcl: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxConditionals Port Outputs (poc). ")
  public List<GrometWire> getWcl() {
    return wcl;
  }

  public void setWcl(List<GrometWire> wcl) {
    this.wcl = wcl;
  }

  public GrometFN wcf(List<GrometWire> wcf) {
    this.wcf = wcf;
    return this;
  }

  public GrometFN addWcfItem(GrometWire wcfItem) {
    if (this.wcf == null) {
      this.wcf = new ArrayList<GrometWire>();
    }
    this.wcf.add(wcfItem);
    return this;
  }

   /**
   * wcf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
   * @return wcf
  **/
  @Schema(description = "wcf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxConditionals Port Outputs (poc). ")
  public List<GrometWire> getWcf() {
    return wcf;
  }

  public void setWcf(List<GrometWire> wcf) {
    this.wcf = wcf;
  }

  public GrometFN wcc(List<GrometWire> wcc) {
    this.wcc = wcc;
    return this;
  }

  public GrometFN addWccItem(GrometWire wccItem) {
    if (this.wcc == null) {
      this.wcc = new ArrayList<GrometWire>();
    }
    this.wcc.add(wccItem);
    return this;
  }

   /**
   * wcc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
   * @return wcc
  **/
  @Schema(description = "wcc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxConditionals Port Outputs (poc). ")
  public List<GrometWire> getWcc() {
    return wcc;
  }

  public void setWcc(List<GrometWire> wcc) {
    this.wcc = wcc;
  }

  public GrometFN wcopo(List<GrometWire> wcopo) {
    this.wcopo = wcopo;
    return this;
  }

  public GrometFN addWcopoItem(GrometWire wcopoItem) {
    if (this.wcopo == null) {
      this.wcopo = new ArrayList<GrometWire>();
    }
    this.wcopo.add(wcopoItem);
    return this;
  }

   /**
   * wcopo: The Wires from (src) the Outer Box Outer Port Outputs (opo) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
   * @return wcopo
  **/
  @Schema(description = "wcopo: The Wires from (src) the Outer Box Outer Port Outputs (opo) to (tgt) the GrometBoxConditionals Port Outputs (poc). ")
  public List<GrometWire> getWcopo() {
    return wcopo;
  }

  public void setWcopo(List<GrometWire> wcopo) {
    this.wcopo = wcopo;
  }

  public GrometFN wcCargs(List<GrometWire> wcCargs) {
    this.wcCargs = wcCargs;
    return this;
  }

  public GrometFN addWcCargsItem(GrometWire wcCargsItem) {
    if (this.wcCargs == null) {
      this.wcCargs = new ArrayList<GrometWire>();
    }
    this.wcCargs.add(wcCargsItem);
    return this;
  }

   /**
   * wc_cargs: The Wires from (src) the arguments (the Port Inputs) of the Conditional condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Conditional (pic). It is through these Wires that the Conditional condition Predicate gets its input argument values from the Conditional Input Ports. 
   * @return wcCargs
  **/
  @Schema(description = "wc_cargs: The Wires from (src) the arguments (the Port Inputs) of the Conditional condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Conditional (pic). It is through these Wires that the Conditional condition Predicate gets its input argument values from the Conditional Input Ports. ")
  public List<GrometWire> getWcCargs() {
    return wcCargs;
  }

  public void setWcCargs(List<GrometWire> wcCargs) {
    this.wcCargs = wcCargs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GrometFN grometFN = (GrometFN) o;
    return Objects.equals(this.name, grometFN.name) &&
        Objects.equals(this.b, grometFN.b) &&
        Objects.equals(this.opi, grometFN.opi) &&
        Objects.equals(this.opo, grometFN.opo) &&
        Objects.equals(this.wopio, grometFN.wopio) &&
        Objects.equals(this.bf, grometFN.bf) &&
        Objects.equals(this.pif, grometFN.pif) &&
        Objects.equals(this.pof, grometFN.pof) &&
        Objects.equals(this.wfopi, grometFN.wfopi) &&
        Objects.equals(this.wfl, grometFN.wfl) &&
        Objects.equals(this.wff, grometFN.wff) &&
        Objects.equals(this.wfc, grometFN.wfc) &&
        Objects.equals(this.wfopo, grometFN.wfopo) &&
        Objects.equals(this.bl, grometFN.bl) &&
        Objects.equals(this.pil, grometFN.pil) &&
        Objects.equals(this.pol, grometFN.pol) &&
        Objects.equals(this.wlopi, grometFN.wlopi) &&
        Objects.equals(this.wll, grometFN.wll) &&
        Objects.equals(this.wlf, grometFN.wlf) &&
        Objects.equals(this.wlc, grometFN.wlc) &&
        Objects.equals(this.wlopo, grometFN.wlopo) &&
        Objects.equals(this.wlIiargs, grometFN.wlIiargs) &&
        Objects.equals(this.wlIoargs, grometFN.wlIoargs) &&
        Objects.equals(this.wlCargs, grometFN.wlCargs) &&
        Objects.equals(this.bc, grometFN.bc) &&
        Objects.equals(this.pic, grometFN.pic) &&
        Objects.equals(this.poc, grometFN.poc) &&
        Objects.equals(this.wcopi, grometFN.wcopi) &&
        Objects.equals(this.wcl, grometFN.wcl) &&
        Objects.equals(this.wcf, grometFN.wcf) &&
        Objects.equals(this.wcc, grometFN.wcc) &&
        Objects.equals(this.wcopo, grometFN.wcopo) &&
        Objects.equals(this.wcCargs, grometFN.wcCargs) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, b, opi, opo, wopio, bf, pif, pof, wfopi, wfl, wff, wfc, wfopo, bl, pil, pol, wlopi, wll, wlf, wlc, wlopo, wlIiargs, wlIoargs, wlCargs, bc, pic, poc, wcopi, wcl, wcf, wcc, wcopo, wcCargs, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GrometFN {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    b: ").append(toIndentedString(b)).append("\n");
    sb.append("    opi: ").append(toIndentedString(opi)).append("\n");
    sb.append("    opo: ").append(toIndentedString(opo)).append("\n");
    sb.append("    wopio: ").append(toIndentedString(wopio)).append("\n");
    sb.append("    bf: ").append(toIndentedString(bf)).append("\n");
    sb.append("    pif: ").append(toIndentedString(pif)).append("\n");
    sb.append("    pof: ").append(toIndentedString(pof)).append("\n");
    sb.append("    wfopi: ").append(toIndentedString(wfopi)).append("\n");
    sb.append("    wfl: ").append(toIndentedString(wfl)).append("\n");
    sb.append("    wff: ").append(toIndentedString(wff)).append("\n");
    sb.append("    wfc: ").append(toIndentedString(wfc)).append("\n");
    sb.append("    wfopo: ").append(toIndentedString(wfopo)).append("\n");
    sb.append("    bl: ").append(toIndentedString(bl)).append("\n");
    sb.append("    pil: ").append(toIndentedString(pil)).append("\n");
    sb.append("    pol: ").append(toIndentedString(pol)).append("\n");
    sb.append("    wlopi: ").append(toIndentedString(wlopi)).append("\n");
    sb.append("    wll: ").append(toIndentedString(wll)).append("\n");
    sb.append("    wlf: ").append(toIndentedString(wlf)).append("\n");
    sb.append("    wlc: ").append(toIndentedString(wlc)).append("\n");
    sb.append("    wlopo: ").append(toIndentedString(wlopo)).append("\n");
    sb.append("    wlIiargs: ").append(toIndentedString(wlIiargs)).append("\n");
    sb.append("    wlIoargs: ").append(toIndentedString(wlIoargs)).append("\n");
    sb.append("    wlCargs: ").append(toIndentedString(wlCargs)).append("\n");
    sb.append("    bc: ").append(toIndentedString(bc)).append("\n");
    sb.append("    pic: ").append(toIndentedString(pic)).append("\n");
    sb.append("    poc: ").append(toIndentedString(poc)).append("\n");
    sb.append("    wcopi: ").append(toIndentedString(wcopi)).append("\n");
    sb.append("    wcl: ").append(toIndentedString(wcl)).append("\n");
    sb.append("    wcf: ").append(toIndentedString(wcf)).append("\n");
    sb.append("    wcc: ").append(toIndentedString(wcc)).append("\n");
    sb.append("    wcopo: ").append(toIndentedString(wcopo)).append("\n");
    sb.append("    wcCargs: ").append(toIndentedString(wcCargs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
