/**
 * Grounded Model Exchange (GroMEt) schema for Function Networks
 * This document defines the GroMEt Function Network data model. Note that Metadata is defined in separate spec.  __Using Swagger to Generate Class Structure__  To automatically generate Python or Java models corresponding to this document, you can use [swagger-codegen](https://swagger.io/tools/swagger-codegen/). This can be used to generate the client code based off of this spec, and in the process this will generate the data model class structure.  1. Install via the method described for your operating system    [here](https://github.com/swagger-api/swagger-codegen#Prerequisites).    Make sure to install a version after 3.0 that will support openapi 3. 2. Run swagger-codegen with the options in the example below.    The URL references where the yaml for this documentation is stored on    github. Make sure to replace CURRENT_VERSION with the correct version.    (The current version is `0.1.4`.)    To generate Java classes rather, change the `-l python` to `-l java`.    Change the value to the `-o` option to the desired output location.    ```    swagger-codegen generate -l python -o ./client -i https://raw.githubusercontent.com/ml4ai/automates-v2/master/docs/source/gromet_FN_v{CURRENT_VERSION}.yaml    ``` 3. Once it executes, the client code will be generated at your specified    location.    For python, the classes will be located in    `$OUTPUT_PATH/swagger_client/models/`.    For java, they will be located in    `$OUTPUT_PATH/src/main/java/io/swagger/client/model/`  If generating GroMEt schema data model classes in SKEMA (AutoMATES), then afer generating the above, follow the instructions here: ``` <automates>/automates/model_assembly/gromet/model/README.md ``` 
 *
 * OpenAPI spec version: 0.1.4
 * Contact: claytonm@arizona.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.model


/**
 * A Function Network (FN). 
 *
 * @param metadata Index (integer) into the metadata_collection table in GrometFNModule.
 * @param name The name of the Function Network 
 * @param b b: The FN Outer Box (although not enforced, there is always only 1). 
 * @param opi opi: The Outer Port Inputs of the FN Outer Box (b) 
 * @param opo opo: The Outer Port Outputs of the FN Outer Box (b) 
 * @param wopio wopio: The Wires from (src) Outer Box Outer Port Inputs (opi) to (tgt) Outer Box Outer Port Outputs (opo). (AKA: Passthrough.) 
 * @param bf bf: The GrometBoxFunctions within this GrometFN. 
 * @param pif pif: The Port Inputs of the GrometBoxFunctions (bf). 
 * @param pof pof: The Port Outputs of the GrometBoxFunctions (bf). 
 * @param wfopi wfopi: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) Outer Box Outer Port Inputs (opi). 
 * @param wfl wfl: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) GrometBoxFunctions Port Outputs (pof). 
 * @param wff wff: The Wires from (src) GrometBoxFunctions Port Inputs (pif) to (tgt) GrometBoxFunctions Port Outputs (pof). 
 * @param wfc wfc: The Wires from (src) GrometBoxConditionals Port Inputs (pic) to (tgt) GrometBoxFunctions Port Outputs (pof). 
 * @param wfopo wfopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxFunctions Port Outputs (pof). 
 * @param bl bl: The FN GrometBoxLoops within this GrometFN. 
 * @param pil pil: The Port Inputs of the GrometBoxLoops (bl) 
 * @param pol pol: The Port Outputs of the GrometBoxLoops (bl) 
 * @param wlopi wlopi: The Wires from (src) GrometBoxLoops Port Inputs (pil) to (tgt) the Outer Box Outer Port Inputs (opi). 
 * @param wll wll: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxLoops Port Outputs (pol). 
 * @param wlf wlf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxLoops Port Outputs (pol). 
 * @param wlc wlc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxLoops Port Outputs (pol). 
 * @param wlopo wlopo: The Wires from (src) Outer Box Outer Port Outputs (opo) to (tgt) GrometBoxLoops Port Outputs (pol). 
 * @param wlIiargs wl_iiargs: The Wires from (src) the arguments (the Port Inputs) of the Loop init (itself a Function, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop init Function gets its input argument values before the init Function is evaluated; these values originate from outside of the Loop. 
 * @param wlIoargs wl_ioargs: The Wires from (src) the Port Inputs of the Loop (pil) to (tgt) the Port Outputs of the Loop init (itself a Function, a type of GrometBoxFunction) (pof). It is through these Wires that the Loop Port Inputs get their values initialized after evaluation of the init Function. 
 * @param wlCargs wl_cargs: The Wires from (src) the arguments (the Port Inputs) of the Loop condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Loop (pil). It is through these Wires that the Loop condition Predicate gets its input argument values from the current state of the Loop Input Ports. 
 * @param bc bc: The FN GrometBoxConditionals within this GrometFN. 
 * @param pic pic: The Port Inputs of the GrometBoxConditionals (bc) 
 * @param poc poc: The Port Outputs of the GrometBoxConditionals (bc) 
 * @param wcopi wcopi: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the Outer Box Outer Port Inputs (opi). 
 * @param wcl wcl: The Wires from (src) the GrometBoxLoops Port Inputs (pil) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
 * @param wcf wcf: The Wires from (src) the GrometBoxFunctions Port Inputs (pif) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
 * @param wcc wcc: The Wires from (src) the GrometBoxConditionals Port Inputs (pic) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
 * @param wcopo wcopo: The Wires from (src) the Outer Box Outer Port Outputs (opo) to (tgt) the GrometBoxConditionals Port Outputs (poc). 
 * @param wcCargs wc_cargs: The Wires from (src) the arguments (the Port Inputs) of the Conditional condition (itself a Predicate, a type of GrometBoxFunction) (pif) to (tgt) the Port Inputs of the Conditional (pic). It is through these Wires that the Conditional condition Predicate gets its input argument values from the Conditional Input Ports. 
 */
case class GrometFN (
  metadata: Option[Integer] = None,
  name: Option[String] = None,
  b: Option[List[GrometBoxFunction]] = None,
  opi: Option[List[GrometPort]] = None,
  opo: Option[List[GrometPort]] = None,
  wopio: Option[List[GrometWire]] = None,
  bf: Option[List[GrometBoxFunction]] = None,
  pif: Option[List[GrometPort]] = None,
  pof: Option[List[GrometPort]] = None,
  wfopi: Option[List[GrometWire]] = None,
  wfl: Option[List[GrometWire]] = None,
  wff: Option[List[GrometWire]] = None,
  wfc: Option[List[GrometWire]] = None,
  wfopo: Option[List[GrometWire]] = None,
  bl: Option[List[GrometBoxLoop]] = None,
  pil: Option[List[GrometPort]] = None,
  pol: Option[List[GrometPort]] = None,
  wlopi: Option[List[GrometWire]] = None,
  wll: Option[List[GrometWire]] = None,
  wlf: Option[List[GrometWire]] = None,
  wlc: Option[List[GrometWire]] = None,
  wlopo: Option[List[GrometWire]] = None,
  wlIiargs: Option[List[GrometWire]] = None,
  wlIoargs: Option[List[GrometWire]] = None,
  wlCargs: Option[List[GrometWire]] = None,
  bc: Option[List[GrometBoxConditional]] = None,
  pic: Option[List[GrometPort]] = None,
  poc: Option[List[GrometPort]] = None,
  wcopi: Option[List[GrometWire]] = None,
  wcl: Option[List[GrometWire]] = None,
  wcf: Option[List[GrometWire]] = None,
  wcc: Option[List[GrometWire]] = None,
  wcopo: Option[List[GrometWire]] = None,
  wcCargs: Option[List[GrometWire]] = None
)

